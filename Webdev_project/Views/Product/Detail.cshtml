
﻿@{
    var message = ViewBag.Message;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var quantity = 1;

    var product = ViewBag.Product;
    var availableStock = 0;
    if (product != null && product.Detail != null && product.Detail.ContainsKey("Kho") && product.Detail["Kho"] != null)
    {
        string khoString = product.Detail["Kho"].ToString();
        int.TryParse(khoString, out availableStock);
    }
    var review = ViewBag.Review;
}

<style>
    .product-detail {
        background-color: #f5f5f5;
        padding-top: 20px;
    }

    .product-container {
        background-color: white;
        padding: 24px;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        margin-bottom: 20px;
    }

    .carousel-item {
        height: 400px;
        background-color: #f8f9fa;
    }

    .image-wrapper {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .image-wrapper img {
            max-height: 100%;
            max-width: 100%;
            object-fit: cover;
        }

    .btn-outline-purple {
        color: #6f42c1;
        border: 2px solid #6f42c1;
        background-color: transparent;
        font-weight: 500;
    }

        .btn-outline-purple:hover {
            background-color: #6f42c1;
            color: #fff;
        }

    .btn-purple {
        background-color: #6f42c1;
        color: white;
        border: none;
        font-weight: 500;
    }

        .btn-purple:hover {
            background-color: #5a32a3;
            color: white;
        }

    .btn i {
        margin-right: 6px;
    }

    .thumbnail-scroll {
        scrollbar-width: thin;
        scrollbar-color: #ccc transparent;
    }

        .thumbnail-scroll::-webkit-scrollbar {
            height: 6px;
        }

        .thumbnail-scroll::-webkit-scrollbar-thumb {
            background-color: #ccc;
            border-radius: 10px;
        }

    .btn-outline-dark.active {
        background-color: #6f42c1;
        color: white;
        border-color: #6f42c1;
    }
    /* Remove arrows for all browsers */
    input.quantity-input::-webkit-outer-spin-button,
    input.quantity-input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input.quantity-input {
        -moz-appearance: textfield;
        width: 60px; /* make it broader */
    }
</style>

<div class="product-detail">
    <div class="container product-container">
        <div class="row">
            <!-- Hình ảnh sản phẩm -->
            <div class="col-md-6">
                <div id="carouselImages" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @for (int i = 0; i < @product.ImageURL.Count; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="image-wrapper">
                                    <img src="@product.ImageURL[i]" class="img-fluid" alt="Image @(i + 1)">
                                </div>
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselImages" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon"></span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselImages" data-bs-slide="next">
                        <span class="carousel-control-next-icon"></span>
                    </button>
                </div>
                <!-- Toàn bộ ảnh dưới hình ảnh sản phẩm -->
                <div class="mt-3 position-relative">
                    <div class="thumbnail-scroll d-flex overflow-auto gap-2 px-5" style="scroll-snap-type: x mandatory;">
                        @for (int i = 0; i < @product.ImageURL.Count; i++)
                        {
                            <img src="@product.ImageURL[i]"
                                 class="img-thumbnail"
                                 data-bs-target="#carouselImages"
                                 data-bs-slide-to="@i"
                                 style="width: 80px; height: 80px; object-fit: cover; cursor: pointer; scroll-snap-align: start;" />
                        }
                    </div>
                </div>
            </div>

            <!-- Thông tin sản phẩm -->
            <div class="col-md-6">
                <h3 class="fw-bold">@product.Name</h3>
                <p class="text-muted">@product.Description</p>
                <h4 class="text-danger fw-bold">₫@product.Price.ToString("N0")</h4>
                <p><strong>Kho còn:</strong> @product.Detail["Kho"]</p>
                <p><strong>Gửi từ:</strong> @product.Detail["Gửi từ"]</p>
                <p><strong>Tình trạng:</strong>@product.Detail["Tình trạng"]</p>
                @if (@product.Color != null && @product.Color.Count > 0)
                {
                    <p>
                        <strong>Màu sắc:</strong>
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var color in @product.Color)
                            {
                                <button class="btn btn-outline-dark color-select" onclick="selectColor(this, '@color')">@color</button>
                            }
                        </div>
                    </p>
                }

                <!--Choosing quantity-->
                <div class="d-flex align-items-center mt-3">
                    <label class="me-3 fw-semibold" style="color: #555;">Số Lượng</label>

                    <div class="input-group quantity-group" style="width: 160px;">
                        <button class="btn btn-outline-secondary btn-sm quantity-decrease" type="button">−</button>
                        <input type="text" id="quantityInput" class="form-control text-center quantity-input" value="@quantity" />
                        <button class="btn btn-outline-secondary btn-sm quantity-increase" type="button">+</button>
                    </div>
                    <span class="ms-3 text-muted">@availableStock sản phẩm có sẵn</span>
                </div>




                
                

                <button type="button"
                        class="btn btn-outline-purple"
                        data-product-id="@product.ProductId"
                        data-product-name="@product.Name"
                        data-image-url="@product.ImageURL[0]"
                        data-price="@product.Price"
                        onclick="addToCart(this)">
                    <i class="bi bi-cart-plus"></i> Thêm vào giỏ hàng
                </button>

                    <button type="button" class="btn btn-purple" onclick="buyNow()">
                        Mua ngay
                    </button>
                </div>
            </div>
            <!-- Chính sách sản phẩm -->
            <div class="container mt-4">
                <h5 class="fw-bold mb-3">Chính sách sản phẩm</h5>
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <div class="border rounded p-3 h-100">
                            <h6><i class="bi bi-shield-check text-success"></i> Bảo hành</h6>
                            <p>Bảo hành chính hãng 24 tháng.</p>
                        </div>
                    </div>
                    <div class="col-md-4 mb-3">
                        <div class="border rounded p-3 h-100">
                            <h6><i class="bi bi-arrow-repeat text-primary"></i> Trả hàng dễ dàng</h6>
                            <p>Trả hàng miễn phí trong vòng 7 ngày</p>
                        </div>
                    </div>
                    <div class="col-md-4 mb-3">
                        <div class="border rounded p-3 h-100">
                            <h6><i class="bi bi-truck text-warning"></i> Miễn phí giao hàng toàn quốc</h6>
                            <p> Đơn hàng đặt sau 13h thứ 6 sẽ được giao vào tuần sau.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Chi tiết kỹ thuật -->
    <div class="container product-container">
        <div class="row">
            <div class="col-12">
                <h5 class="fw-bold mb-3">Thông số kỹ thuật</h5>
                <table class="table table-bordered">
                    <tbody>
                        @foreach (var spec in @product.Detail)
                        {
                            <tr>
                                <th>@spec.Key</th>
                                <td>@spec.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedColor = '';

    function selectColor(button, color) {
        // Remove active class from all color buttons
        document.querySelectorAll('.color-select').forEach(btn => {
            btn.classList.remove('active');
        });

        // Add active class to clicked button
        button.classList.add('active');
        selectedColor = color;
    }

       document.addEventListener('DOMContentLoaded', function () {
           const input = document.querySelector('.quantity-input');
           const increaseBtn = document.querySelector('.quantity-increase');
           const decreaseBtn = document.querySelector('.quantity-decrease');
           const max = @availableStock;
           const min = 1;

           increaseBtn.addEventListener('click', () => {
               let current = parseInt(input.value) || min;
               if (current < max)
               {
                   input.value = current + 1;
                   document.getElementById("quantityInput").value = input.value;
               }
           });

           decreaseBtn.addEventListener('click', () => {
               let current = parseInt(input.value) || min;
               if (current > min)
               {
                   input.value = current - 1;
                   document.getElementById("quantityInput").value = input.value;
               }

           });

           input.addEventListener('input', () => {
               let val = parseInt(input.value);
               if (isNaN(val) || val < min) input.value = min;
               else if (val > max)
               {
                   input.value = max;
                   document.getElementById("quantityInput").value = input.value;
               }

           });

           input.addEventListener('blur', () => {
               if (input.value === "")
               {
                   input.value = min;
                   document.getElementById("quantityInput").value = input.value;
               }
           });
       });




    function getQuantity() {
        let getQuan=parseInt(document.getElementById("quantityInput").value) || 1;
        console.log(getQuan)
        return getQuan
    }

    async function addToCart(button) {
          const quantity = getQuantity();
        const data = {
            ProductId: button.dataset.productId,
            ProductName: button.dataset.productName,
            Image: button.dataset.imageUrl,
            Quantity: quantity,
            UnitPrice: parseFloat(button.dataset.price)
        };

         try {
             const response = await fetch('/ShoppingCart/AddToCart', {
                 method: 'POST',
                 headers: {
                     'Content-Type': 'application/json'
                 },
                 body: JSON.stringify(data)
             });

             if (response.ok) {
                 const result = await response.json();
                 alert('Đã thêm vào giỏ hàng!');
                 console.log(result);
             } else {
                 const error = await response.text();
                 console.error(error);
                 alert('Có lỗi xảy ra khi thêm vào giỏ hàng.');
             }
         } catch (err) {
             console.error(err);
             alert('Lỗi kết nối đến máy chủ.');
         }
     }

     document.addEventListener('DOMContentLoaded', () => {
         document.querySelectorAll('.add-to-cart').forEach(button => {
             button.addEventListener('click', () => addToCart(button));
         });
     });


   

</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Đánh giá từ người dùng khác -->
@* <h6 class="fw-bold mt-4">Đánh giá từ người dùng khác</h6>
    @foreach (var r in rating)
    {
        <div class="card border p-3 mb-2">
            <div class="d-flex justify-content-between">
                <div>
                    <strong>Người dùng @r.UserID</strong>
                    <div>
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= r.Stars)
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                            else
                            {
                                <i class="bi bi-star text-muted"></i>
                            }
                        }
                    </div>
                </div>
                <small class="text-muted">@r.CreatedTime.ToString("dd/MM/yyyy HH:mm")</small>
            </div>
            <p class="mt-2">@r.Comment</p>
            @if (r.MediaURLs != null && r.MediaURLs.Any(url => url.EndsWith(".jpg") || url.EndsWith(".jpeg") || url.EndsWith(".png") || url.EndsWith(".gif") || url.EndsWith(".webp")))
            {
                <div class="mt-2 d-flex flex-wrap gap-2">
                    @foreach (var media in r.MediaURLs)
                    {
                        if (media.EndsWith(".jpg") || media.EndsWith(".jpeg") || media.EndsWith(".png") || media.EndsWith(".gif") || media.EndsWith(".webp"))
                        {
                            <img src="@media" alt="User image" style="max-width: 150px; height: auto;" class="img-thumbnail" />
                        }
                    }
                </div>
            }
        </div>
    }
</body> *@